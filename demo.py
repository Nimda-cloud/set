#!/usr/bin/env python3
"""
NIMDA Security Demo - Showcasing all three phases
"""

import os

def demo_intro():
    """Display demo introduction"""
    print("üõ°Ô∏è  NIMDA ENHANCED SECURITY SYSTEM DEMO")
    print("=" * 50)
    print("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó –≤—Å—ñ—Ö —Ç—Ä—å–æ—Ö —Ñ–∞–∑:")
    print()
    print("Phase 1: üîí Kernel-Level Monitoring")
    print("  ‚úÖ –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –Ω–∞ —Ä—ñ–≤–Ω—ñ —è–¥—Ä–∞ macOS")
    print("  ‚úÖ –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø—Ä–æ—Ü–µ—Å—ñ–≤, —Ñ–∞–π–ª—ñ–≤, –º–µ—Ä–µ–∂—ñ")
    print("  ‚úÖ –í–∏—Å–æ–∫–æ—Ç–æ—á–Ω–µ –≤–∏—è–≤–ª–µ–Ω–Ω—è –∑–∞–≥—Ä–æ–∑")
    print()
    print("Phase 2: üéØ AI Threat Hunter")
    print("  ‚úÖ –ü—Ä–æ–∞–∫—Ç–∏–≤–Ω–∏–π AI –º–∏—Å–ª–∏–≤–µ—Ü—å")
    print("  ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –≥—ñ–ø–æ—Ç–µ–∑ –∑–∞–≥—Ä–æ–∑")
    print("  ‚úÖ –ê–≤—Ç–æ–Ω–æ–º–Ω–µ —Ä–æ–∑—Å–ª—ñ–¥—É–≤–∞–Ω–Ω—è")
    print()
    print("Phase 3: üé≠ Deception Management")
    print("  ‚úÖ –§–∞–π–ª–æ–≤—ñ —Ç–∞ –º–µ—Ä–µ–∂–µ–≤—ñ –ø–∞—Å—Ç–∫–∏")
    print("  ‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ–±–º–∞–Ω—É –∑–ª–æ–≤–º–∏—Å–Ω–∏–∫—ñ–≤")
    print("  ‚úÖ –ö–æ–Ω—Ç—Ä-—Ä–æ–∑–≤—ñ–¥–∫–∞")
    print()
    print("=" * 50)
    print("–í—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –∑ task.md –≤–∏–∫–æ–Ω–∞–Ω—ñ –ø–æ–≤–Ω—ñ—Å—Ç—é!")
    print("=" * 50)
    print()

def demo_features():
    """Demonstrate key features"""
    print("üöÄ –ö–õ–Æ–ß–û–í–Ü –û–°–û–ë–õ–ò–í–û–°–¢–Ü:")
    print()
    print("üìä –Ü–ù–¢–ï–†–§–ï–ô–°:")
    print("  ‚Ä¢ –ú–æ–¥–µ—Ä–Ω–∏–π GUI –∑ —Ç–µ–º–Ω–æ—é —Ç–µ–º–æ—é")
    print("  ‚Ä¢ 6 —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏—Ö –≤–∫–ª–∞–¥–æ–∫")
    print("  ‚Ä¢ –í—ñ–¥–∑–∏–≤—á–∏–≤–∏–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π –¥–∏–∑–∞–π–Ω")
    print("  ‚Ä¢ –ë—É—Ñ–µ—Ä–∏–∑–∞—Ü—ñ—è –¥–ª—è –∫—Ä–∞—â–æ—ó –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ")
    print()
    print("‚ö° –ü–†–û–î–£–ö–¢–ò–í–ù–Ü–°–¢–¨:")
    print("  ‚Ä¢ –ë–∞–≥–∞—Ç–æ–ø–æ—Ç–æ—á–Ω–∞ –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞")
    print("  ‚Ä¢ –ù–µ–±–ª–æ–∫—É—é—á—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó")
    print("  ‚Ä¢ –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –ø–æ–¥—ñ–π")
    print("  ‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω—ñ —ñ–Ω—Ç–µ—Ä–≤–∞–ª–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è")
    print()
    print("üîß –ú–û–ù–Ü–¢–û–†–ò–ù–ì:")
    print("  ‚Ä¢ Kernel-level –ø–æ–¥—ñ—ó –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ")
    print("  ‚Ä¢ AI –∞–Ω–∞–ª—ñ–∑ –∑–∞–≥—Ä–æ–∑")
    print("  ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ honeypots")
    print("  ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∞–ª–µ—Ä—Ç—ñ–≤")
    print()

def demo_launch_options():
    """Show launch options"""
    print("üöÄ –í–ê–†–Ü–ê–ù–¢–ò –ó–ê–ü–£–°–ö–£:")
    print()
    print("1. –®–≤–∏–¥–∫–∏–π –∑–∞–ø—É—Å–∫:")
    print("   ./run_nimda.sh quick")
    print()
    print("2. –ü–æ–≤–Ω–∏–π –∑–∞–ø—É—Å–∫:")
    print("   ./run_nimda.sh full")
    print()
    print("3. –ü—Ä—è–º–∏–π –∑–∞–ø—É—Å–∫:")
    print("   python3 start_nimda_modern.py")
    print()
    print("4. –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –∑–∞–ø—É—Å–∫:")
    print("   python3 quick_launch.py")
    print()

def main():
    """Main demo function"""
    demo_intro()
    demo_features()
    demo_launch_options()
    
    print("‚è∞ –ì–æ—Ç–æ–≤–∏–π –¥–æ –∑–∞–ø—É—Å–∫—É! –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –±—É–¥—å-—è–∫–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –≤–∏—â–µ.")
    print()
    
    # Option to auto-launch
    try:
        choice = input("–ó–∞–ø—É—Å—Ç–∏—Ç–∏ NIMDA –∑–∞—Ä–∞–∑? (y/N): ").strip().lower()
        if choice in ['y', 'yes', '—Ç–∞–∫', '—Ç']:
            print("\nüöÄ –ó–∞–ø—É—Å–∫–∞—î–º–æ NIMDA...")
            os.system("python3 start_nimda_modern.py")
    except KeyboardInterrupt:
        print("\nüëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")

if __name__ == "__main__":
    main()
