#!/usr/bin/env python3
"""
NIMDA Sound Test - –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–≤—É–∫–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏
"""

import sys
import time
import os

# –î–æ–¥–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–æ —à–ª—è—Ö—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from nimda_integrated import SoundAlertSystem, ThreatLevel, AlertType, Fore, Style

def test_basic_sounds():
    """–¢–µ—Å—Ç—É–≤–∞—Ç–∏ –±–∞–∑–æ–≤—ñ –∑–≤—É–∫–∏"""
    print(f"{Fore.CYAN}üîä –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –±–∞–∑–æ–≤–∏—Ö –∑–≤—É–∫—ñ–≤...{Style.RESET_ALL}")
    
    sound_system = SoundAlertSystem()
    
    for level in ThreatLevel:
        print(f"–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è {level.name} —Ä—ñ–≤–Ω—è...")
        sound_system.trigger_alert(AlertType.SYSTEM_ERROR, level, f"–¢–µ—Å—Ç {level.name}")
        time.sleep(2)
    
    print(f"{Fore.GREEN}‚úÖ –ë–∞–∑–æ–≤—ñ –∑–≤—É–∫–∏ –ø—Ä–æ—Ç–µ—Å—Ç–æ–≤–∞–Ω–æ{Style.RESET_ALL}")

def test_alert_types():
    """–¢–µ—Å—Ç—É–≤–∞—Ç–∏ —Ä—ñ–∑–Ω—ñ —Ç–∏–ø–∏ —Å–ø–æ–≤—ñ—â–µ–Ω—å"""
    print(f"{Fore.CYAN}üîä –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ç–∏–ø—ñ–≤ —Å–ø–æ–≤—ñ—â–µ–Ω—å...{Style.RESET_ALL}")
    
    for alert_type in AlertType:
        print(f"–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è {alert_type.value}...")
        sound_system.trigger_alert(alert_type, ThreatLevel.HIGH, f"–¢–µ—Å—Ç {alert_type.value}")
        time.sleep(1.5)
    
    print(f"{Fore.GREEN}‚úÖ –¢–∏–ø–∏ —Å–ø–æ–≤—ñ—â–µ–Ω—å –ø—Ä–æ—Ç–µ—Å—Ç–æ–≤–∞–Ω–æ{Style.RESET_ALL}")

def test_emergency_siren():
    """–¢–µ—Å—Ç—É–≤–∞—Ç–∏ –∞–≤–∞—Ä—ñ–π–Ω—É —Å–∏—Ä–µ–Ω—É"""
    print(f"{Fore.RED}üö® –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∞–≤–∞—Ä—ñ–π–Ω–æ—ó —Å–∏—Ä–µ–Ω–∏...{Style.RESET_ALL}")
    print(f"{Fore.YELLOW}‚ö†Ô∏è  –¶–µ –±—É–¥–µ –≥—É—á–Ω–æ! –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C –¥–ª—è –∑—É–ø–∏–Ω–µ–Ω–Ω—è{Style.RESET_ALL}")
    
    try:
        sound_system = SoundAlertSystem()
        sound_system.start_emergency_siren()
        time.sleep(5)
        sound_system.stop_emergency_siren()
        print(f"{Fore.GREEN}‚úÖ –ê–≤–∞—Ä—ñ–π–Ω–∞ —Å–∏—Ä–µ–Ω–∞ –ø—Ä–æ—Ç–µ—Å—Ç–æ–≤–∞–Ω–∞{Style.RESET_ALL}")
    except KeyboardInterrupt:
        sound_system.stop_emergency_siren()
        print(f"{Fore.YELLOW}–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Ä–µ–Ω–∏ –ø–µ—Ä–µ—Ä–≤–∞–Ω–æ{Style.RESET_ALL}")

def test_threat_scenarios():
    """–¢–µ—Å—Ç—É–≤–∞—Ç–∏ —Ä–µ–∞–ª—å–Ω—ñ —Å—Ü–µ–Ω–∞—Ä—ñ—ó –∑–∞–≥—Ä–æ–∑"""
    print(f"\n{Fore.YELLOW}‚ö†Ô∏è –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä–µ–∞–ª—å–Ω–∏—Ö —Å—Ü–µ–Ω–∞—Ä—ñ—ó–≤ –∑–∞–≥—Ä–æ–∑...{Style.RESET_ALL}")
    
    sound_system = SoundAlertSystem()
    
    scenarios = [
        (AlertType.PORT_SCAN, ThreatLevel.MEDIUM, "–í–∏—è–≤–ª–µ–Ω–æ —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è –ø–æ—Ä—Ç—ñ–≤"),
        (AlertType.SSH_CONNECTION, ThreatLevel.HIGH, "–ü—ñ–¥–æ–∑—Ä—ñ–ª–µ SSH –∑'—î–¥–Ω–∞–Ω–Ω—è"),
        (AlertType.NETWORK_INTRUSION, ThreatLevel.CRITICAL, "–í—Ç–æ—Ä–≥–Ω–µ–Ω–Ω—è –≤ –º–µ—Ä–µ–∂—É"),
        (AlertType.LOCKDOWN_BREACH, ThreatLevel.EMERGENCY, "–ü–æ—Ä—É—à–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è")
    ]
    
    for i, (alert_type, threat_level, message) in enumerate(scenarios, 1):
        print(f"\n{i}/4: {alert_type.value} —Å—Ü–µ–Ω–∞—Ä—ñ–π...")
        sound_system.trigger_alert(alert_type, threat_level, message)
        time.sleep(3)
    
    print(f"{Fore.GREEN}‚úÖ –°—Ü–µ–Ω–∞—Ä—ñ—ó –∑–∞–≥—Ä–æ–∑ –ø—Ä–æ—Ç–µ—Å—Ç–æ–≤–∞–Ω–æ{Style.RESET_ALL}")

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–≤—É–∫—ñ–≤"""
    print(f"{Fore.CYAN}üîä –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–≤—É–∫–æ–≤–∏—Ö —Å–ø–æ–≤—ñ—â–µ–Ω—å NIMDA{Style.RESET_ALL}")
    print("=" * 50)
    
    if len(sys.argv) > 1:
        test_type = sys.argv[1].lower()
        
        if test_type == "basic":
            test_basic_sounds()
        elif test_type == "types":
            test_alert_types()
        elif test_type == "emergency":
            test_emergency_siren()
        elif test_type == "all":
            test_basic_sounds()
            time.sleep(1)
            test_alert_types()
            time.sleep(1)
            test_emergency_siren()
        else:
            print(f"{Fore.RED}–ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–∏–ø —Ç–µ—Å—Ç—É: {test_type}{Style.RESET_ALL}")
    else:
        print("–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:")
        print("  python3 test_sounds.py basic    - –¢–µ—Å—Ç—É–≤–∞—Ç–∏ –±–∞–∑–æ–≤—ñ –∑–≤—É–∫–∏")
        print("  python3 test_sounds.py types    - –¢–µ—Å—Ç—É–≤–∞—Ç–∏ —Ç–∏–ø–∏ —Å–ø–æ–≤—ñ—â–µ–Ω—å")
        print("  python3 test_sounds.py emergency - –¢–µ—Å—Ç—É–≤–∞—Ç–∏ –∞–≤–∞—Ä—ñ–π–Ω—É —Å–∏—Ä–µ–Ω—É")
        print("  python3 test_sounds.py all      - –¢–µ—Å—Ç—É–≤–∞—Ç–∏ –≤—Å–µ")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print(f"\n{Fore.YELLOW}–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ—Ä–≤–∞–Ω–æ{Style.RESET_ALL}")
    except Exception as e:
        print(f"{Fore.RED}–ü–æ–º–∏–ª–∫–∞: {e}{Style.RESET_ALL}")
    finally:
        print(f"{Fore.GREEN}–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ{Style.RESET_ALL}")
