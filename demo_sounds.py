#!/usr/bin/env python3
"""
NIMDA Sound Alert System - Demo Script
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π —Å–∏—Å—Ç–µ–º–∏ –∑–≤—É–∫–æ–≤–∏—Ö —Å–ø–æ–≤—ñ—â–µ–Ω—å
"""

import time
import sys
from sound_alerts_enhanced import (
    SoundAlertSystem, ThreatLevel, AlertType,
    emergency_alert, stop_emergency
)
from colorama import Fore, Style

def run_basic_demo():
    """–ë–∞–∑–æ–≤–µ –¥–µ–º–æ —Ä—ñ–≤–Ω—ñ–≤ —Å–ø–æ–≤—ñ—â–µ–Ω—å"""
    print(f"\n{Fore.CYAN}=== –î–ï–ú–û: –ë–∞–∑–æ–≤—ñ —Ä—ñ–≤–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω—å ==={Style.RESET_ALL}")
    
    scenarios = [
        {
            'level': ThreatLevel.LOW,
            'description': '–ù–∏–∑—å–∫–∏–π —Ä—ñ–≤–µ–Ω—å - –ø—Ä–æ—Å—Ç–∏–π –∑–≤—É–∫–æ–≤–∏–π —Å–∏–≥–Ω–∞–ª',
            'emoji': 'üîä'
        },
        {
            'level': ThreatLevel.MEDIUM,
            'description': '–°–µ—Ä–µ–¥–Ω—ñ–π —Ä—ñ–≤–µ–Ω—å - –ø–æ–¥–≤—ñ–π–Ω–∏–π —Å–∏–≥–Ω–∞–ª',
            'emoji': 'üîäüîä'
        },
        {
            'level': ThreatLevel.HIGH,
            'description': '–í–∏—Å–æ–∫–∏–π —Ä—ñ–≤–µ–Ω—å - –ø–æ—Ç—Ä—ñ–π–Ω–∏–π —Å–∏–≥–Ω–∞–ª + –≥–æ–ª–æ—Å',
            'emoji': 'üîäüîäüîä'
        },
        {
            'level': ThreatLevel.CRITICAL,
            'description': '–ö—Ä–∏—Ç–∏—á–Ω–∏–π —Ä—ñ–≤–µ–Ω—å - —Å–∫–ª–∞–¥–Ω–∏–π —Å–∏–≥–Ω–∞–ª + –≥–æ–ª–æ—Å',
            'emoji': 'üö®'
        }
    ]
    
    for i, scenario in enumerate(scenarios, 1):
        print(f"\n[{i}/4] {scenario['emoji']} –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è {scenario['level'].name} —Ä—ñ–≤–Ω—è")
        print(f"      {scenario['description']}")
        
        sound_system.trigger_alert(
            AlertType.SYSTEM_ERROR,
            scenario['level'],
            f"–¢–µ—Å—Ç {scenario['level'].name} —Ä—ñ–≤–Ω—è"
        )
        
        print("      –û—á—ñ–∫—É–≤–∞–Ω–Ω—è 3 —Å–µ–∫—É–Ω–¥–∏...")
        time.sleep(3)
    
    print(f"\n{Fore.GREEN}‚úÖ –ë–∞–∑–æ–≤–µ –¥–µ–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ{Style.RESET_ALL}")


def run_sound_types_demo():
    """–î–µ–º–æ —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –∑–≤—É–∫—ñ–≤"""
    print(f"\n{Fore.CYAN}=== –î–ï–ú–û: –†—ñ–∑–Ω—ñ —Ç–∏–ø–∏ –∑–≤—É–∫—ñ–≤ ==={Style.RESET_ALL}")
    
    sound_configs = [
        {'name': '–°–∏—Å—Ç–µ–º–Ω–∞ –ø–æ–º–∏–ª–∫–∞', 'type': AlertType.SYSTEM_ERROR},
        {'name': '–ü—ñ–¥–æ–∑—Ä—ñ–ª–∏–π –ø—Ä–æ—Ü–µ—Å', 'type': AlertType.SUSPICIOUS_PROCESS},
        {'name': '–ú–µ—Ä–µ–∂–µ–≤–µ –≤—Ç–æ—Ä–≥–Ω–µ–Ω–Ω—è', 'type': AlertType.NETWORK_INTRUSION},
        {'name': '–ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –º–∞–π–Ω—ñ–Ω–≥—É', 'type': AlertType.GPU_MINING}
    ]
    
    for i, config in enumerate(sound_configs, 1):
        print(f"\n[{i}/4] –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è: {config['name']}")
        
        sound_system.trigger_alert(
            config['type'],
            ThreatLevel.HIGH,
            f"–¢–µ—Å—Ç {config['name']}"
        )
        
        time.sleep(2)
    
    print(f"\n{Fore.GREEN}‚úÖ –î–µ–º–æ —Ç–∏–ø—ñ–≤ –∑–≤—É–∫—ñ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ{Style.RESET_ALL}")


def run_threat_scenarios_demo():
    """–î–µ–º–æ —Ä–µ–∞–ª—å–Ω–∏—Ö —Å—Ü–µ–Ω–∞—Ä—ñ—ó–≤ –∑–∞–≥—Ä–æ–∑"""
    print(f"\n{Fore.CYAN}=== –î–ï–ú–û: –†–µ–∞–ª—å–Ω—ñ —Å—Ü–µ–Ω–∞—Ä—ñ—ó –∑–∞–≥—Ä–æ–∑ ==={Style.RESET_ALL}")
    
    scenarios = [
        {
            'name': '–ï—Å–∫–∞–ª–∞—Ü—ñ—è –∑–∞–≥—Ä–æ–∑–∏',
            'steps': [
                (ThreatLevel.LOW, "–í–∏—è–≤–ª–µ–Ω–æ –ø—ñ–¥–æ–∑—Ä—ñ–ª—É –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å"),
                (ThreatLevel.MEDIUM, "–ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞"),
                (ThreatLevel.HIGH, "–ö—Ä–∏—Ç–∏—á–Ω–∞ –∑–∞–≥—Ä–æ–∑–∞ –≤–∏—è–≤–ª–µ–Ω–∞"),
                (ThreatLevel.CRITICAL, "–°–∏—Å—Ç–µ–º–∞ –ø—ñ–¥ –∞—Ç–∞–∫–æ—é")
            ]
        },
        {
            'name': '–ú–µ—Ä–µ–∂–µ–≤–∞ –∞—Ç–∞–∫–∞',
            'steps': [
                (ThreatLevel.MEDIUM, "–í–∏—è–≤–ª–µ–Ω–æ —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è –ø–æ—Ä—Ç—ñ–≤"),
                (ThreatLevel.HIGH, "SSH –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –ø—ñ–¥–æ–∑—Ä—ñ–ª–æ—ó –∞–¥—Ä–µ—Å–∏"),
                (ThreatLevel.CRITICAL, "–°–ø—Ä–æ–±–∞ –≤—Ç–æ—Ä–≥–Ω–µ–Ω–Ω—è –≤ —Å–∏—Å—Ç–µ–º—É"),
                (ThreatLevel.EMERGENCY, "–ö—Ä–∏—Ç–∏—á–Ω–µ –ø–æ—Ä—É—à–µ–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏")
            ]
        }
    ]
    
    for scenario in scenarios:
        print(f"\n{Fore.YELLOW}–°—Ü–µ–Ω–∞—Ä—ñ–π: {scenario['name']}{Style.RESET_ALL}")
        print("–¶–µ —Å–∏–º—É–ª—é—î –µ—Å–∫–∞–ª–∞—Ü—ñ—é —ñ–Ω—Ü–∏–¥–µ–Ω—Ç—É –±–µ–∑–ø–µ–∫–∏...")
        
        for i, (threat_level, message) in enumerate(scenario['steps'], 1):
            emoji = "üî¥" if threat_level in [ThreatLevel.CRITICAL, ThreatLevel.EMERGENCY] else "üü°"
            print(f"  {emoji} –ö—Ä–æ–∫ {i}: {threat_level.name} - {message}")
            
            sound_system.trigger_alert(
                AlertType.NETWORK_INTRUSION,
                threat_level,
                message
            )
            
            time.sleep(3)
        
        print(f"  {Fore.GREEN}–°—Ü–µ–Ω–∞—Ä—ñ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ{Style.RESET_ALL}")
    
    print(f"\n{Fore.GREEN}‚úÖ –î–µ–º–æ —Å—Ü–µ–Ω–∞—Ä—ñ—ó–≤ –∑–∞–≥—Ä–æ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–æ{Style.RESET_ALL}")


def run_emergency_demo():
    """–î–µ–º–æ –∞–≤–∞—Ä—ñ–π–Ω–æ—ó —Å–∏—Ä–µ–Ω–∏"""
    print(f"\n{Fore.RED}=== –î–ï–ú–û: –ê–≤–∞—Ä—ñ–π–Ω–∞ —Å–∏—Ä–µ–Ω–∞ ==={Style.RESET_ALL}")
    print(f"{Fore.YELLOW}‚ö†Ô∏è  –¶–µ –±—É–¥–µ –ì–£–ß–ù–û! –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C –¥–ª—è —Ä–∞–Ω–Ω—å–æ–≥–æ –∑—É–ø–∏–Ω–µ–Ω–Ω—è{Style.RESET_ALL}")
    
    try:
        print("\n–ó–∞–ø—É—Å–∫ –∞–≤–∞—Ä—ñ–π–Ω–æ—ó —Å–∏—Ä–µ–Ω–∏ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏...")
        for i in range(3, 0, -1):
            print(f"  {i}...")
            time.sleep(1)
        
        print(f"\n{Fore.RED}üö® –ê–í–ê–†–Ü–ô–ù–ê –°–ò–†–ï–ù–ê –ê–ö–¢–ò–í–û–í–ê–ù–ê üö®{Style.RESET_ALL}")
        sound_system.start_emergency_siren()
        
        print("–°–∏—Ä–µ–Ω–∞ –±—É–¥–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ 8 —Å–µ–∫—É–Ω–¥...")
        time.sleep(8)
        
        print(f"\n{Fore.YELLOW}–ó—É–ø–∏–Ω–µ–Ω–Ω—è –∞–≤–∞—Ä—ñ–π–Ω–æ—ó —Å–∏—Ä–µ–Ω–∏...{Style.RESET_ALL}")
        sound_system.stop_emergency_siren()
        
        print(f"\n{Fore.GREEN}‚úÖ –î–µ–º–æ –∞–≤–∞—Ä—ñ–π–Ω–æ—ó —Å–∏—Ä–µ–Ω–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ{Style.RESET_ALL}")
        
    except KeyboardInterrupt:
        print(f"\n{Fore.YELLOW}–î–µ–º–æ –∞–≤–∞—Ä—ñ–π–Ω–æ—ó —Å–∏—Ä–µ–Ω–∏ –ø–µ—Ä–µ—Ä–≤–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º{Style.RESET_ALL}")
        sound_system.stop_emergency_siren()


def run_interactive_demo():
    """–Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–≤—É–∫—ñ–≤"""
    print(f"\n{Fore.CYAN}=== –Ü–ù–¢–ï–†–ê–ö–¢–ò–í–ù–ï –¢–ï–°–¢–£–í–ê–ù–ù–Ø –ó–í–£–ö–Ü–í ==={Style.RESET_ALL}")
    
    while True:
        try:
            print(f"\n{Fore.CYAN}–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:{Style.RESET_ALL}")
            print("1. –¢–µ—Å—Ç—É–≤–∞—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π —Ä—ñ–≤–µ–Ω—å –∑–∞–≥—Ä–æ–∑–∏")
            print("2. –¢–µ—Å—Ç—É–≤–∞—Ç–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π —Ç–∏–ø —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è")
            print("3. –ü–µ—Ä–µ–º–∫–Ω—É—Ç–∏ –≥–æ–ª–æ—Å–æ–≤—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è")
            print("4. –ü–µ—Ä–µ–º–∫–Ω—É—Ç–∏ beep —Å–∏–≥–Ω–∞–ª–∏")
            print("5. –ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º–∏")
            print("6. –¢–µ—Å—Ç –∞–≤–∞—Ä—ñ–π–Ω–æ—ó —Å–∏—Ä–µ–Ω–∏")
            print("7. –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –ø–æ–≤–Ω–µ –¥–µ–º–æ")
            print("0. –í–∏—Ö—ñ–¥")
            
            choice = input("\n–í–∞—à –≤–∏–±—ñ—Ä: ").strip()
            
            if choice == "0":
                break
            elif choice == "1":
                print("\n–†—ñ–≤–Ω—ñ –∑–∞–≥—Ä–æ–∑:")
                for i, level in enumerate(ThreatLevel, 1):
                    emoji = "üî¥" if level in [ThreatLevel.CRITICAL, ThreatLevel.EMERGENCY] else "üü°"
                    print(f"  {i}. {emoji} {level.name}")
                
                try:
                    level_choice = int(input("–í–∏–±–µ—Ä—ñ—Ç—å —Ä—ñ–≤–µ–Ω—å (1-5): ")) - 1
                    if 0 <= level_choice < len(ThreatLevel):
                        threat_level = list(ThreatLevel)[level_choice]
                        sound_system.trigger_alert(AlertType.SYSTEM_ERROR, threat_level, f"–¢–µ—Å—Ç {threat_level.name}")
                    else:
                        print(f"{Fore.RED}–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä{Style.RESET_ALL}")
                except ValueError:
                    print(f"{Fore.RED}–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä{Style.RESET_ALL}")
                    
            elif choice == "2":
                print("\n–¢–∏–ø–∏ —Å–ø–æ–≤—ñ—â–µ–Ω—å:")
                for i, alert_type in enumerate(AlertType, 1):
                    print(f"  {i}. {alert_type.value}")
                
                try:
                    type_choice = int(input("–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø (1-8): ")) - 1
                    if 0 <= type_choice < len(AlertType):
                        alert_type = list(AlertType)[type_choice]
                        sound_system.trigger_alert(alert_type, ThreatLevel.HIGH, f"–¢–µ—Å—Ç {alert_type.value}")
                    else:
                        print(f"{Fore.RED}–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä{Style.RESET_ALL}")
                except ValueError:
                    print(f"{Fore.RED}–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä{Style.RESET_ALL}")
                    
            elif choice == "3":
                if sound_system.sound_enabled:
                    sound_system.disable_sound()
                else:
                    sound_system.enable_sound()
                    
            elif choice == "4":
                print("Beep —Å–∏–≥–Ω–∞–ª–∏ –∑–∞–≤–∂–¥–∏ –∞–∫—Ç–∏–≤–Ω—ñ")
                
            elif choice == "5":
                print(f"–°—Ç–∞—Ç—É—Å –∑–≤—É–∫—É: {'–£–≤—ñ–º–∫–Ω–µ–Ω–æ' if sound_system.sound_enabled else '–í–∏–º–∫–Ω–µ–Ω–æ'}")
                print(f"–ê–≤–∞—Ä—ñ–π–Ω–∞ —Å–∏—Ä–µ–Ω–∞: {'–ê–∫—Ç–∏–≤–Ω–∞' if sound_system.emergency_active else '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}")
                
            elif choice == "6":
                print(f"{Fore.RED}–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É –∞–≤–∞—Ä—ñ–π–Ω–æ—ó —Å–∏—Ä–µ–Ω–∏...{Style.RESET_ALL}")
                sound_system.start_emergency_siren()
                time.sleep(3)
                sound_system.stop_emergency_siren()
                
            elif choice == "7":
                print(f"{Fore.CYAN}–ó–∞–ø—É—Å–∫ –ø–æ–≤–Ω–æ–≥–æ –¥–µ–º–æ...{Style.RESET_ALL}")
                run_basic_demo()
                run_sound_types_demo()
                run_threat_scenarios_demo()
                
            else:
                print(f"{Fore.RED}–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä{Style.RESET_ALL}")
                
        except KeyboardInterrupt:
            break
        except Exception as e:
            print(f"{Fore.RED}–ü–æ–º–∏–ª–∫–∞: {e}{Style.RESET_ALL}")
    
    print(f"\n{Fore.GREEN}–Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞ —Å–µ—Å—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞{Style.RESET_ALL}")


def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–µ–º–æ"""
    print(f"{Fore.CYAN}üîä –î–µ–º–æ —Å–∏—Å—Ç–µ–º–∏ –∑–≤—É–∫–æ–≤–∏—Ö —Å–ø–æ–≤—ñ—â–µ–Ω—å NIMDA{Style.RESET_ALL}")
    print("=" * 60)
    
    if len(sys.argv) > 1:
        command = sys.argv[1].lower()
        
        if command == "basic":
            run_basic_demo()
        elif command == "types":
            run_sound_types_demo()
        elif command == "scenarios":
            run_threat_scenarios_demo()
        elif command == "emergency":
            run_emergency_demo()
        elif command == "interactive":
            run_interactive_demo()
        elif command == "full":
            print(f"{Fore.CYAN}–ó–∞–ø—É—Å–∫ –ø–æ–≤–Ω–æ–≥–æ –¥–µ–º–æ...{Style.RESET_ALL}")
            run_basic_demo()
            run_sound_types_demo()
            run_threat_scenarios_demo()
            print(f"\n{Fore.GREEN}üéâ –ü–æ–≤–Ω–µ –¥–µ–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!{Style.RESET_ALL}")
            print(f"{Fore.YELLOW}–ü—Ä–∏–º—ñ—Ç–∫–∞: –ê–≤–∞—Ä—ñ–π–Ω–∞ —Å–∏—Ä–µ–Ω–∞ –Ω–µ –≤–∫–ª—é—á–µ–Ω–∞ (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É 'emergency'){Style.RESET_ALL}")
        else:
            print(f"{Fore.RED}–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞: {command}{Style.RESET_ALL}")
    else:
        print(f"\n{Fore.GREEN}–î–æ—Å—Ç—É–ø–Ω—ñ —Ä–µ–∂–∏–º–∏ –¥–µ–º–æ:{Style.RESET_ALL}")
        print("  python3 demo_sounds.py basic       - –ë–∞–∑–æ–≤—ñ —Ä—ñ–≤–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω—å")
        print("  python3 demo_sounds.py types       - –†—ñ–∑–Ω—ñ —Ç–∏–ø–∏ –∑–≤—É–∫—ñ–≤")
        print("  python3 demo_sounds.py scenarios   - –†–µ–∞–ª—å–Ω—ñ —Å—Ü–µ–Ω–∞—Ä—ñ—ó –∑–∞–≥—Ä–æ–∑")
        print("  python3 demo_sounds.py emergency   - –¢–µ—Å—Ç –∞–≤–∞—Ä—ñ–π–Ω–æ—ó —Å–∏—Ä–µ–Ω–∏")
        print("  python3 demo_sounds.py interactive - –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è")
        print("  python3 demo_sounds.py full        - –ü–æ–≤–Ω–µ –¥–µ–º–æ (–±–µ–∑ –∞–≤–∞—Ä—ñ–π–Ω–æ—ó —Å–∏—Ä–µ–Ω–∏)")
        print(f"\n{Fore.YELLOW}–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ: –ü–æ—á–Ω—ñ—Ç—å –∑ 'basic' –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∞—É–¥—ñ–æ{Style.RESET_ALL}")


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print(f"\n\n{Fore.YELLOW}–î–µ–º–æ –ø–µ—Ä–µ—Ä–≤–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º{Style.RESET_ALL}")
    except Exception as e:
        print(f"\n{Fore.RED}–ü–æ–º–∏–ª–∫–∞ –¥–µ–º–æ: {e}{Style.RESET_ALL}")
    finally:
        print(f"{Fore.GREEN}–î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!{Style.RESET_ALL}")
