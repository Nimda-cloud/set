#!/bin/bash
# NIMDA Auto-Fix Script
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º GUI

echo "üîß NIMDA Auto-Fix Script"
echo "========================"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Python
echo "üêç Checking Python..."
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python3 not found!"
    exit 1
fi

echo "‚úÖ Python3 found: $(python3 --version)"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
echo "üì¶ Checking dependencies..."
python3 -c "
import sys
missing = []
modules = ['tkinter', 'ttkbootstrap', 'psutil', 'sqlite3', 'threading', 'queue']
for module in modules:
    try:
        __import__(module)
        print(f'   ‚úÖ {module}')
    except ImportError:
        missing.append(module)
        print(f'   ‚ùå {module}')

if missing:
    print(f'‚ùå Missing modules: {missing}')
    sys.exit(1)
else:
    print('‚úÖ All modules available')
"

if [ $? -ne 0 ]; then
    echo "üîÑ Installing missing dependencies..."
    pip3 install ttkbootstrap psutil requests
fi

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ—ó —Å—Ç—Ä—É–∫—Ç—É—Ä–∏
echo "üìÅ Checking file structure..."
required_files=(
    "gui/nimda_modern_gui.py"
    "core/kernel_monitor.py" 
    "core/system_query_engine.py"
    "core/deception_manager.py"
    "llm_security_agent.py"
    "start_nimda_modern.py"
)

missing_files=()
for file in "${required_files[@]}"; do
    if [ -f "$file" ]; then
        echo "   ‚úÖ $file"
    else
        echo "   ‚ùå $file"
        missing_files+=("$file")
    fi
done

if [ ${#missing_files[@]} -ne 0 ]; then
    echo "‚ùå Missing critical files: ${missing_files[*]}"
    echo "üí° Please restore from backup or re-run setup"
    exit 1
fi

# –û—á–∏—â–µ–Ω–Ω—è —Ç–∏–º—á–∞—Å–æ–≤–∏—Ö —Ñ–∞–π–ª—ñ–≤
echo "üßπ Cleaning temporary files..."
find . -name "*.pyc" -delete 2>/dev/null || true
find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
echo "‚úÖ Cleanup completed"

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É
echo "üîê Checking permissions..."
chmod +x *.py 2>/dev/null || true
chmod +x *.sh 2>/dev/null || true
echo "‚úÖ Permissions updated"

# –®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç GUI
echo "üß™ Testing GUI components..."
python3 -c "
try:
    import ttkbootstrap as ttk
    from gui.nimda_modern_gui import NimdaModernGUI
    
    # –¢–µ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è GUI
    root = ttk.Window(themename='darkly')
    root.withdraw()
    
    gui = NimdaModernGUI(root)
    print('‚úÖ GUI components working')
    
    root.destroy()
    
except Exception as e:
    print(f'‚ùå GUI test failed: {e}')
    exit(1)
"

if [ $? -ne 0 ]; then
    echo "‚ùå GUI test failed"
    exit 1
fi

# –ó–∞–ø—É—Å–∫ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
echo "üîç Running diagnostics..."
python3 gui_diagnostics.py | tail -n 5

echo ""
echo "üéâ Auto-fix completed successfully!"
echo ""
echo "üí° Ready to launch NIMDA:"
echo "   ./run_nimda.sh            # Normal launch"
echo "   ./run_nimda.sh quick      # Quick launch"
echo "   python3 performance_demo.py  # Performance demo"
echo "   python3 stress_test.py       # Stress test"
